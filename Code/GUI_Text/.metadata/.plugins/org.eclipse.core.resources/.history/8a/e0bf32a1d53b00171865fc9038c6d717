package net.kerfuffle.textTest;

import java.util.ArrayList;

import net.kerfuffle.Utilities.GUI.Scrollable;
import net.kerfuffle.Utilities.GUI.Text.Font;

public class History {
	
	private class Sentence
	{
		private float x, y;
		private String str;
		
		public Sentence(String str, float x, float y)
		{
			this.str = str;
			this.x=x;
			this.y=y;
		}
		
		public void draw(Font font)
		{
			font.drawText(str, x, y);
		}
	}
	
	//private StringBuilder history = new StringBuilder();
	private ArrayList<Sentence> history = new ArrayList<Sentence>();
	private Font font;
	private Scrollable scrollable;
	private float windowWidth,windowHeight;
	
	public History(Font font, float windowWidth, float windowHeight)
	{
		this.font = font;
		scrollable = new Scrollable(-windowWidth/2+10, -windowHeight/2+50, 5, windowWidth, windowHeight);
		this.windowWidth=windowWidth;
		this.windowHeight=windowHeight;
	}
	
	public void draw()
	{
		scrollable.update();
		//font.drawText(history.toString(), scrollable.getX(), scrollable.getY());
		for (Sentence s : history)
		{
			s.draw(font);
		}
	}
	
	private float newY = (-windowHeight/2)+50;
	public void addSentence(String str)
	{
		System.out.println(-windowHeight/2 +50);
		str = removeChar(str, '\n');
		str = addLines(str);
		Sentence s = new Sentence(str, -windowWidth/2 + 10, newY);
		newY -= 50;
		history.add(s);
	}
	
	private String addLines(String str)
	{
		StringBuilder sb = new StringBuilder();
		sb.append(str);
		
		for (int i = 0; i < sb.length(); i++)
		{
			String s = sb.toString().substring(0, i+1);
			
			if (font.getWidth(s) > windowWidth-20)
			{
				sb.insert(i, '\n');
			}
		}
		return sb.toString();
	}
	
	private String removeChar(String str, char c)
	{
		StringBuilder sb = new StringBuilder();
		sb.append(str);
		for (int i = sb.length()-1; i > 0; i--)
		{
			if (sb.charAt(i) == c)
			{
				sb.deleteCharAt(i);
			}
		}
		return sb.toString();
	}
}
